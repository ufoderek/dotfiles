function cu { if [ -z "$1" ]; then
    #no argument, cd to git root, repo root or home
    if [ "${PWD}" != "$HOME" ]; then
        cd ..
            until [ -d .git -o -d .repo -o "${PWD}" == "$HOME" ]; do
                cd ..
            done
        fi
    else
        #argument is integer, go to top directory
        if [ $1 -eq $1 2> /dev/null ]; then
            for (( i=$1; i>=1; i-- )) do
                cd ..
            done
        #argument is string (directory name)
        else
            for ((;;)) do
                cd ..
                if [ "$1" == "${PWD##*/}" -o "${PWD}" == "$HOME" ]; then #shell parameter expansion
                    break
                fi
            done
        fi
    fi
}

function is_osx {
    local uname_str=`uname`
    if [[ "$uname_str" == Darwin ]]; then
        return 0 #success
    else
        return 1
    fi
}

function is_linux {
    local uname_str=`uname`
    if [[ "$uname_str" == Linux ]]; then
        return 0 #success
    else
        return 1
    fi
}

function is_nvt {
    local my_host=`hostname`
    if [[ "$my_host" == oalnx* ]]; then
        return 0 #success
    elif [[ "$my_host" == oaalnx3 ]]; then
        return 0 #success
    elif [[ "$my_host" == oaplnx7 ]]; then
        return 0 #success
    else
        return 1
    fi
}

function parse_git_branch {
    if [ -d mediatek/.git ]; then
        (cd mediatek && git branch --no-color 2> /dev/null | \
        sed -e '/^[^*]/d' -e "s/* \(.*\)/ (\1)/" -e "s/(no branch)/?/" && cd ..)
    else
        git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ (\1)/" -e "s/(no branch)/?/"
    fi
}

function gen_short_date {
    short_date="`date +%H%M`"
}

function gen_short_pwd {
    short_pwd="${PWD/#$HOME/~}"
    local pwdmaxlen=$((${COLUMNS-80}/4))
    [ ${#short_pwd} -gt $pwdmaxlen ] && short_pwd="...${short_pwd:3-$pwdmaxlen}"
}

function get_ip() {
    if ! is_osx; then
        ifconfig "${1:-eth0}" | sed -n '2s/.* inet addr:\([0-9.]*\) .*/\1/p';
    fi
}

function wk {
    if [ -n "$2" ]; then
        cd ~/wk/$1.$2.git
    elif [ -n "$1" ]; then
        if [ "$2" == d ] && [ -L ~/wk/.d ] && [ -d ~/wk/.d ]; then
            cd `readlink -f ~/wk/.d`
        else
            cd ~/wk/$1
        fi
    else
        cd ~/wk
    fi
    ls
}

function wp {
    if [ -n "$1" ]; then
        if [ ! -d ~/wk/tmp/$1 ]; then
            mkdir ~/wk/tmp/$1
        fi
        cd ~/wk/tmp/$1
    else
        cd ~/wk/tmp
    fi
    ls
}

# Simple svn enhancement function
# Read more about it at: http://westhoffswelt.de
function svn() {
	local SVN="`which svn`"

	local operation=$1
	shift

	case "${operation}" in
		"status"|"stat"|"st")
			# My thanks for this snippet go to Kore Nordmann
			# (http://kore-nordmann.de)
                ${SVN} ${operation} --ignore-externals "$@" | grep -v '^X' | sed -e 's/^\?.*$/[1;34m\0[m/' -e 's/^!.*$/[1;31m\0[m/' -e 's/^A.*$/[1;32m\0[m/' -e 's/^M.*$/[1;33m\0[m/' -e 's/^D.*$/[0;31m\0[m/'
		;;
		"diff"|"di")
			# The colordiff utility (http://colordiff.sourceforge.net) is
			# needed for this enhancement to work
			# Thanks to Lukas Kahwe Smith for the addition to
			# leave out whitespace changes
			# Thanks to Robin Speekenbrink for the hint to the -R
			# switch of less, which should fix problems some of
			# you might have with colorization.
			${SVN} ${operation} "$@" --diff-cmd `which diff` -x "-u -w"|colordiff|less -R
		;;
		"update"|"up")
			# This snippet is taken from a blog post found on the net. My
			# thanks go out to the author of it.
			# http://woss.name/2007/02/01/display-svn-changelog-on-svn-up/
			# I have slightly modified it to better suit my needs.

			local old_revision=`${SVN} info "$@" | awk '/^Revision:/ {print $2}'`
			local first_update=$((${old_revision} + 1))

			${SVN} ${operation} "$@"

			local new_revision=`${SVN} info "$@" | awk '/^Revision:/ {print $2}'`

			if [ ${new_revision} -gt ${old_revision} ]; then
				svn log -v -rHEAD:${first_update} "$@" | less -mRXF
			else
				echo "No changes."
			fi
		;;
		"log")
			${SVN} ${operation} "$@"|sed -e 's/^-\+$/[1;32m\0[m/' -e 's/^r[0-9]\+.\+$/[1;31m\0[m/' | less -mRXF
		;;
		"blame"|"praise"|"annotate"|"ann")
			${SVN} ${operation} "$@"|sed -e 's/^\(\s*[0-9]\+\s*\)\([^ ]\+\s*\)\(.*\)$/[1;32m\1[m[1;31m\2[m\3/'
		;;
		*)
			${SVN} ${operation} "$@"
		;;
	esac
}
